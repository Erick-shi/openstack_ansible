---
# file: roles/common/tasks/main.yml

- name: stop apparmor
  service:
    name: apparmor
    state: stopped

- name: teardown apparmor
  shell: service apparmor teardown

- name: percona apt key
  apt_key: 
    id: 1C4CBDCDCD2EFD2A 
    url: 'http://www.percona.com/redir/downloads/RPM-GPG-KEY-percona' 
    state: present

- name: percona apt repository binary
  apt_repository: 
    repo: 'deb http://repo.percona.com/apt trusty main' 
    state: present

- name: juno apt repository
  template:
    src: juno_apt.j2
    dest: /etc/apt/sources.list.d/ubuntu-cloud-archive-juno-trusty.list
    owner: root
    group: root
    mode: 0644

- name: haproxy ppa apt repository
  apt_repository:
    repo: 'ppa:vbernat/haproxy-1.5'

- name: update the packages
  apt:
    upgrade: dist
    update_cache: yes
    force: yes

- name: generate hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644

- name: get openstack hostname
  shell: grep {{ ansible_default_ipv4.address }} /etc/hosts | awk '{print $2}'
  register: openstack_hostname

- name: generate hostname file
  template:
    src: hostname.j2
    dest: /etc/hostname
    owner: root
    group: root
    mode: 0755

- name: set the hostname
  shell: hostname -F /etc/hostname

- name: generate limits.conf
  template:
    src: limits.conf.j2
    dest: /etc/security/limits.conf
    owner: root
    group: root
    mode: 0644

# All passwords
- include_vars: group_vars/openstack_password.yml

# Site variables
- include_vars: group_vars/site_def.yml

- name: Add them to a file
  assemble: 
    src: files/additional_ssh_keys/
    dest: /home/ubuntu/.ssh/extra_ssh_keys
    remote_src: False
  always_run: yes

- name: add additional ssh keys
  lineinfile:
    dest: /home/ubuntu/.ssh/authorized_keys
    line: "{{ item }}"
    state: present
  when: item
  with_lines: cat /home/ubuntu/.ssh/extra_ssh_keys

- name: install packages
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - python-software-properties
    - ntp
    - sysstat
    - python-mysqldb
    - percona-xtradb-cluster-client-5.6

- name: start and enable ntp
  service: 
    name: ntp 
    state: running 
    enabled: yes

- name: install cloud archives key
  apt:
    pkg: ubuntu-cloud-keyring
    state: installed

- name: check what /bin/sh is
  shell: ls -la /bin/sh | awk '{print $NF}'
  register: bin_sh_points_to

- name: /bin/sh should be bash not dash
  shell: rm -f /bin/sh ; ln -s /bin/bash /bin/sh
  when: bin_sh_points_to != "/bin/bash"
