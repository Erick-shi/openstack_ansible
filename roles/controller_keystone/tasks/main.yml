---

- name: keystone packages
  apt: 
    pkg: "{{ item }}" 
    state: present
  with_items:
    - keystone
    - python-keystone

- name: ensure /etc/keystone/ssl
  file: 
    dest: /etc/keystone/ssl 
    state: directory 
    owner: keystone 
    group: keystone 
    mode: 0755

- name: ensure /etc/keystone/ssl/certs
  file: 
    dest: /etc/keystone/ssl 
    state: directory 
    owner: keystone 
    group: keystone 
    mode: 0755

- name: install signing cert
  copy: 
    src: etc/keystone/ssl/certs/signing_cert.pem 
    dest: /etc/keystone/ssl/certs/signing_cert.pem 
    owner: keystone 
    group: keystone 
    mode: 0664

- name: ensure /etc/keystone/ssl/private
  file: 
    dest: /etc/keystone/ssl 
    state: directory 
    owner: keystone 
    group: keystone 
    mode: 0750

- name: install signing key
  copy: 
    src: etc/keystone/ssl/private/signing_key.pem 
    dest: /etc/keystone/ssl/private/signing_key.pem 
    owner: keystone 
    group: keystone 
    mode: 0640

- name: install cakey
  copy: 
    src: etc/keystone/ssl/private/cakey.pem 
    dest: /etc/keystone/ssl/private/cakey.pem 
    owner: keystone 
    group: keystone 
    mode: 0640

- name: write the keystone config file
  template: 
    src: keystone.conf.j2 
    dest: /etc/keystone/keystone.conf 
    owner: root 
    group: root 
    mode: 0644
  notify:
    - restart keystone

- name: remove old sqlite db file
  file: 
    path: /var/lib/keystone/keystone.db 
    state: absent

- name: keystone db_sync
  shell: su -s /bin/sh -c "keystone-manage db_sync" keystone
  when: db_init is defined

- name: ensure keystone-all service not started
  service: 
    name: keystone 
    state: restarted
  
- name: cron job to flush the old tokens
  cron: 
    name: keystone_flush
    user: keystone 
    state: present 
    minute: 1 
    job: "/usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1"

- name: render keystone init template
  template: 
    src: keystone_init.sh.j2 
    dest: /var/tmp/keystone_init.sh 
    owner: root 
    group: root 
    mode: 0755

# This creates the Keystone admin tenant, role and user, and all the service endpoints
- name: initialize keystone
  shell: /var/tmp/keystone_init.sh
  when: db_init is defined

- name: creates the openstack_admin.rc
  template: 
    src: openstack_admin.rc.j2 
    dest: /root/.openstack_admin.rc 
    owner: root 
    group: root 
    mode: 0600

- name: creates the openstack_demo.rc
  template: 
    src: openstack_demo.rc.j2 
    dest: /root/.openstack_demo.rc 
    owner: root 
    group: root 
    mode: 0600

- name: create service tenant
  keystone_user: 
    tenant: service 
    tenant_description: "Service tenant" 
    login_user: admin 
    login_tenant_name: admin 
    login_password: "{{ KEYSTONE_ADMIN_PASS }}"
  ignore_errors: true

- name: create demo tenant
  keystone_user: 
    tenant: demo 
    tenant_description: "Demo tenant" 
    login_user: admin 
    login_tenant_name: admin 
    login_password: "{{ KEYSTONE_ADMIN_PASS }}"
  ignore_errors: true

- name: create demo user
  keystone_user: 
    tenant: demo 
    user: demo 
    password: demo 
    email: demo@example.com 
    login_user: admin 
    login_tenant_name: admin 
    login_password: "{{ KEYSTONE_ADMIN_PASS }}"
  ignore_errors: true

- name: add role to demo user
  keystone_user: 
    tenant: demo 
    role: _member_ 
    user: demo 
    email: demo@example.com 
    login_user: admin 
    login_tenant_name: admin 
    login_password: "{{ KEYSTONE_ADMIN_PASS }}"
  ignore_errors: true